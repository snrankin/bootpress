//// ======================================================================== //
/// @name   _grid
/// @group  BootPress
/// @since  1.0.0
/// @author Sam Rankin <samrankin.dev@gmail.com>
/// ======================================================================= ////

// ============================ Container widths ============================ //
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
    // Single container class with breakpoint max-widths
    .container {
        @include make-container();
        @if $use-viewport-max-widths {
            @include make-container-max-widths($container-vw-max-widths);
        } @else {
            @include make-container-max-widths();
        }
    }

    // 100% wide container at all breakpoints
    .container-fluid {
        @include make-container();
    }

    // Responsive containers that are 100% wide until a breakpoint
    @each $breakpoint, $container-max-width in $container-max-widths {
        .container-#{$breakpoint} {
            @extend .container-fluid;
        }

        @if $use-viewport-max-widths == false {
            @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
                %responsive-container-#{$breakpoint} {
                    max-width: $container-max-width;
                }

                @each $name, $width in $grid-breakpoints {
                    @if (
                        $container-max-width > $width or $breakpoint == $name
                    ) {
                        .container#{breakpoint-infix($name, $grid-breakpoints)} {
                            @extend %responsive-container-#{$breakpoint};
                        }
                    }
                }
            }
        }
    }
}

// =================================== Row ================================== //
//
// Rows contain your columns.

@if $enable-grid-classes {
    .row {
        @include make-row();
    }

    // Remove the negative margin from default .row, then the horizontal padding
    // from all immediate children columns (to prevent runaway style inheritance).
    .no-gutters {
        margin-right: 0;
        margin-left: 0;

        > .col,
        > [class*='col-'] {
            padding-right: 0;
            padding-left: 0;
        }
    }
}

// ================================= Columns ================================ //
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
    @include make-grid-columns;
    .bp_col {
        @include make-col-ready;
    }
}

// --- Generating classes for 1/5 --- //
@include row-cols(5);
@each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @include media-breakpoint-up($breakpoint) {
        @for $i from 1 through 4 {
            .col#{$infix}-#{100/5*$i} {
                @include make-col($i, 5);
            }
        }
    }
}

// =============================== Grid Items =============================== //

@if $enable-grid-classes {
    .content-wrapper {
        @include make-col-content;
    }
    .content-item {
        @include make-col-item;
    }
}
